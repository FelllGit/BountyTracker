name: Deploy on PR merge to main

on:
  pull_request:
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Restore .env from GitHub Secrets
        run: echo "$ENV_FILE" > .env
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}

      - name: Check for changes in package.json or package-lock.json
        id: check_changes
        run: |
          if git diff --name-only HEAD~1 -- package.json package-lock.json | grep -qE 'package(-lock)?\.json'; then
            echo "RUN_NPM_INSTALL=true" >> $GITHUB_ENV
          else
            echo "RUN_NPM_INSTALL=false" >> $GITHUB_ENV
          fi

      - name: Reinstall dependencies (if required)
        if: env.RUN_NPM_INSTALL == 'true'
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps

      - name: Verify installed dependencies
        run: ls -lah node_modules/@/components/ui/ || echo "❌ Components not found"

      - name: Set NODE_PATH
        run: echo "NODE_PATH=./src" >> $GITHUB_ENV

      - name: Clear Next.js cache
        run: rm -rf .next/cache

      - name: Build the project
        run: |
          export PATH="./node_modules/.bin:$PATH"
          npx next build && npx next-nginx-routes

      - name: Copy files to /var/www/vigilseekFrontend/out
        run: sudo cp -R out/* /var/www/vigilseekFrontend/out/

      - name: Set permissions for Nginx
        run: |
          sudo chown -R www-data:www-data /var/www/vigilseekFrontend/out
          sudo find /var/www/vigilseekFrontend/out -type d -exec chmod 755 {} \;
          sudo find /var/www/vigilseekFrontend/out -type f -exec chmod 644 {} \;

      - name: Restart Nginx
        run: sudo systemctl restart nginx

      - name: Deployment completed
        run: echo "✅ Deployment completed successfully!"
